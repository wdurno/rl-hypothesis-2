apiVersion: apps/v1 
kind: Deployment
metadata: 
    name: {{ .Values.name }} 
    labels:
      name: {{ .Values.name }}
      app: parameter-shard-combiner 
spec:
  replicas: {{ .Values.replicas }} 
  selector:
    matchLabels:
      app: parameter-shard-combiner 
  template:
    metadata:
      labels:
        name: {{ .Values.name }} 
        app: parameter-shard-combiner
    spec: 
      containers: 
        - name: {{ .Values.name }} 
          image: {{ .Values.docker_server }}/ai:{{ .Values.ai_image_tag }}
          env:
            - name: DISTRIBUTED_ROLE 
              value: PARAMETER_SHARD_COMBINER
            - name: MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accesskey 
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretkey
            - name: POSTGRES_SECRET 
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-secret 
          command: ["bash", "/app/src/scripts/run-navigate-dense.sh"]
          imagePullPolicy: Always
          resources:
            requests:
              memory: "2000Mi"
              cpu: "1000m"
          volumeMounts:
            - name: models-vol
              mountPath: /models
      volumes:
        - name: models-vol
          emptyDir: {} 
      imagePullSecrets:
        - name: acr-creds
      nodeSelector: 
        agentpool: ephemeral 
      tolerations:
        - key: kubernetes.azure.com/scalesetpriority
          operator: "Exists" 
